[{"E:\\Github\\MyMern\\client\\src\\App.js":"1","E:\\Github\\MyMern\\client\\src\\index.js":"2","E:\\Github\\MyMern\\client\\src\\components\\layout\\Navbar.js":"3","E:\\Github\\MyMern\\client\\src\\components\\layout\\Landing.js":"4","E:\\Github\\MyMern\\client\\src\\components\\auth\\Register.js":"5","E:\\Github\\MyMern\\client\\src\\components\\auth\\Login.js":"6","E:\\Github\\MyMern\\client\\src\\reducers\\index.js":"7","E:\\Github\\MyMern\\client\\src\\store.js":"8","E:\\Github\\MyMern\\client\\src\\reducers\\alert.js":"9","E:\\Github\\MyMern\\client\\src\\actions\\types.js":"10","E:\\Github\\MyMern\\client\\src\\actions\\alert.js":"11","E:\\Github\\MyMern\\client\\src\\components\\layout\\Alert.js":"12","E:\\Github\\MyMern\\client\\src\\actions\\auth.js":"13","E:\\Github\\MyMern\\client\\src\\reducers\\auth.js":"14","E:\\Github\\MyMern\\client\\src\\utils\\setAuthToken.js":"15","E:\\Github\\MyMern\\client\\src\\components\\dashboard\\Dashboard.js":"16","E:\\Github\\MyMern\\client\\src\\components\\routing\\PrivateRoute.js":"17","E:\\Github\\MyMern\\client\\src\\reducers\\profile.js":"18","E:\\Github\\MyMern\\client\\src\\actions\\profile.js":"19","E:\\Github\\MyMern\\client\\src\\components\\layout\\Spinner.js":"20","E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","E:\\Github\\MyMern\\client\\src\\components\\dashboard\\DashboardActions.js":"22","E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\EditProfile.js":"23","E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\AddExperience.js":"24","E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\AddEducation.js":"25","E:\\Github\\MyMern\\client\\src\\components\\dashboard\\Experience.js":"26","E:\\Github\\MyMern\\client\\src\\components\\dashboard\\Education.js":"27","E:\\Github\\MyMern\\client\\src\\components\\profiles\\Profiles.js":"28","E:\\Github\\MyMern\\client\\src\\components\\profiles\\ProfileItem.js":"29","E:\\Github\\MyMern\\client\\src\\components\\profile\\Profile.js":"30","E:\\Github\\MyMern\\client\\src\\components\\profile\\ProfileTop.js":"31"},{"size":2625,"mtime":1608312144575,"results":"32","hashOfConfig":"33"},{"size":146,"mtime":1606761008008,"results":"34","hashOfConfig":"33"},{"size":1558,"mtime":1608227216199,"results":"35","hashOfConfig":"33"},{"size":1161,"mtime":1607361004267,"results":"36","hashOfConfig":"33"},{"size":3169,"mtime":1606910746178,"results":"37","hashOfConfig":"33"},{"size":2120,"mtime":1606910566694,"results":"38","hashOfConfig":"33"},{"size":206,"mtime":1607076231650,"results":"39","hashOfConfig":"33"},{"size":399,"mtime":1606811802723,"results":"40","hashOfConfig":"33"},{"size":389,"mtime":1606812669405,"results":"41","hashOfConfig":"33"},{"size":773,"mtime":1608139003445,"results":"42","hashOfConfig":"33"},{"size":401,"mtime":1606815840308,"results":"43","hashOfConfig":"33"},{"size":505,"mtime":1607366170609,"results":"44","hashOfConfig":"33"},{"size":2121,"mtime":1607449116464,"results":"45","hashOfConfig":"33"},{"size":1121,"mtime":1608055436148,"results":"46","hashOfConfig":"33"},{"size":253,"mtime":1606905225104,"results":"47","hashOfConfig":"33"},{"size":1995,"mtime":1608056163640,"results":"48","hashOfConfig":"33"},{"size":731,"mtime":1607071277129,"results":"49","hashOfConfig":"33"},{"size":1092,"mtime":1608798631979,"results":"50","hashOfConfig":"33"},{"size":6051,"mtime":1608827356879,"results":"51","hashOfConfig":"33"},{"size":304,"mtime":1607404854627,"results":"52","hashOfConfig":"33"},{"size":7037,"mtime":1607513319461,"results":"53","hashOfConfig":"33"},{"size":663,"mtime":1607877978859,"results":"54","hashOfConfig":"33"},{"size":7712,"mtime":1608796734481,"results":"55","hashOfConfig":"33"},{"size":3591,"mtime":1608229708250,"results":"56","hashOfConfig":"33"},{"size":3652,"mtime":1608229655928,"results":"57","hashOfConfig":"33"},{"size":1480,"mtime":1608055578590,"results":"58","hashOfConfig":"33"},{"size":1438,"mtime":1608055726595,"results":"59","hashOfConfig":"33"},{"size":1343,"mtime":1608802451981,"results":"60","hashOfConfig":"33"},{"size":1029,"mtime":1608229145119,"results":"61","hashOfConfig":"33"},{"size":1485,"mtime":1608797117264,"results":"62","hashOfConfig":"33"},{"size":2343,"mtime":1608798022721,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"dsqfww",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"69"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"69"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Github\\MyMern\\client\\src\\App.js",[],["144","145"],"E:\\Github\\MyMern\\client\\src\\index.js",[],["146","147"],"E:\\Github\\MyMern\\client\\src\\components\\layout\\Navbar.js",["148"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { loadUser, logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user'></i>\r\n          <span className='hide-sm'> Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt'></i>\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","E:\\Github\\MyMern\\client\\src\\components\\layout\\Landing.js",[],["149","150"],"E:\\Github\\MyMern\\client\\src\\components\\auth\\Register.js",[],"E:\\Github\\MyMern\\client\\src\\components\\auth\\Login.js",["151"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { name, email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard'></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Sign In</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Sign Into Your Account\r\n        </p>\r\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n              minLength='6'\r\n            />\r\n          </div>\r\n          <input type='submit' className='btn btn-primary' value='Login' />\r\n        </form>\r\n        <p className='my-1'>\r\n          Do not have an account? <Link to='/register'>Sign Up</Link>\r\n        </p>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","E:\\Github\\MyMern\\client\\src\\reducers\\index.js",[],"E:\\Github\\MyMern\\client\\src\\store.js",[],"E:\\Github\\MyMern\\client\\src\\reducers\\alert.js",["152"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["153","154"],"E:\\Github\\MyMern\\client\\src\\actions\\types.js",[],"E:\\Github\\MyMern\\client\\src\\actions\\alert.js",[],"E:\\Github\\MyMern\\client\\src\\components\\layout\\Alert.js",[],["155","156"],"E:\\Github\\MyMern\\client\\src\\actions\\auth.js",["157"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  LOGOUT_FAIL,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n//load User\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/JSON',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/JSON',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT /clear profile\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","E:\\Github\\MyMern\\client\\src\\reducers\\auth.js",["158"],"import {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Github\\MyMern\\client\\src\\utils\\setAuthToken.js",[],"E:\\Github\\MyMern\\client\\src\\components\\dashboard\\Dashboard.js",["159"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n  deleteAccount,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus'></i>Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            {' '}\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","E:\\Github\\MyMern\\client\\src\\components\\routing\\PrivateRoute.js",["160"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../reducers/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login'></Redirect>\r\n      ) : (\r\n        <Component {...props}></Component>\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","E:\\Github\\MyMern\\client\\src\\reducers\\profile.js",["161","162"],"import {\r\n  PROFILE_ERROR,\r\n  GET_PROFILE,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","E:\\Github\\MyMern\\client\\src\\actions\\profile.js",[],"E:\\Github\\MyMern\\client\\src\\components\\layout\\Spinner.js",["163"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt={'Loading...'}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\CreateProfile.js",["164"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","E:\\Github\\MyMern\\client\\src\\components\\dashboard\\DashboardActions.js",[],["165","166"],"E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\EditProfile.js",[],"E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\AddExperience.js",[],"E:\\Github\\MyMern\\client\\src\\components\\profile-forms\\AddEducation.js",[],["167","168"],"E:\\Github\\MyMern\\client\\src\\components\\dashboard\\Experience.js",[],"E:\\Github\\MyMern\\client\\src\\components\\dashboard\\Education.js",[],"E:\\Github\\MyMern\\client\\src\\components\\profiles\\Profiles.js",[],"E:\\Github\\MyMern\\client\\src\\components\\profiles\\ProfileItem.js",[],"E:\\Github\\MyMern\\client\\src\\components\\profile\\Profile.js",["169"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileTop from './ProfileTop';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading === true ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back to Profile\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","E:\\Github\\MyMern\\client\\src\\components\\profile\\ProfileTop.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"170","replacedBy":"174"},{"ruleId":"172","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":18},{"ruleId":"170","replacedBy":"180"},{"ruleId":"172","replacedBy":"181"},{"ruleId":"176","severity":1,"message":"182","line":13,"column":11,"nodeType":"178","messageId":"179","endLine":13,"endColumn":15},{"ruleId":"183","severity":1,"message":"184","line":4,"column":1,"nodeType":"185","endLine":15,"endColumn":2},{"ruleId":"170","replacedBy":"186"},{"ruleId":"172","replacedBy":"187"},{"ruleId":"170","replacedBy":"188"},{"ruleId":"172","replacedBy":"189"},{"ruleId":"176","severity":1,"message":"190","line":11,"column":3,"nodeType":"178","messageId":"179","endLine":11,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":19,"column":1,"nodeType":"185","endLine":54,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":19,"column":6,"nodeType":"193","endLine":19,"endColumn":8,"suggestions":"194"},{"ruleId":"176","severity":1,"message":"195","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":14},{"ruleId":"176","severity":1,"message":"196","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},{"ruleId":"183","severity":1,"message":"184","line":19,"column":1,"nodeType":"185","endLine":58,"endColumn":2},{"ruleId":"183","severity":1,"message":"197","line":4,"column":1,"nodeType":"185","endLine":14,"endColumn":3},{"ruleId":"176","severity":1,"message":"198","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"170","replacedBy":"199"},{"ruleId":"172","replacedBy":"200"},{"ruleId":"170","replacedBy":"201"},{"ruleId":"172","replacedBy":"202"},{"ruleId":"191","severity":1,"message":"203","line":17,"column":6,"nodeType":"193","endLine":17,"endColumn":22,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],["205"],["206"],"no-unused-vars","'loadUser' is defined but never used.","Identifier","unusedVar",["205"],["206"],"'name' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["205"],["206"],["205"],["206"],"'LOGOUT_FAIL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["207"],"'auth' is defined but never used.","'PropTypes' is defined but never used.","Assign arrow function to a variable before exporting as module default","'Link' is defined but never used.",["205"],["206"],["205"],["206"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"213","text":"214"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"215","text":"216"},[597,599],"[getCurrentProfile]",[478,494],"[getProfileById, match.params.id]"]